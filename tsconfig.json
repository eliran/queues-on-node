{
  "compilerOptions": {
    // "incremental": true,
    "target": "es2015",
    "module": "commonjs",
    "lib": ["es5", "es6", "es2015"],
    "declaration": true,
    "declarationMap": true,
    "sourceMap": true,
    "outDir": "./dist",
    "rootDir": "./src",
    // "composite": true,                     /* Enable project compilation */
    // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
    "removeComments": true,
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    "strict": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "noImplicitThis": true,
    "alwaysStrict": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "allowJs":  true,

    "moduleResolution": "node",
    "baseUrl": "./",
    "paths": {
      "@lib/*": [ "src/*" ],
      "@backend/*": [ "src/queue/backend/*" ],
      "@steps/*": [ "features.steps/*" ],
      "@testSupport/*": [ "src/testSupport/*" ],
      "@test": [ "src/testSupport/index.ts" ]
    },                          
    "types": [ "node", "mocha" ],
    "esModuleInterop": true,
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    "experimentalDecorators": true,
    "emitDecoratorMetadata": true
  },
  "include": [
    "./src/",
    "./typings"
  ],
  "exclude": [
    "node_modules",
    "features.steps",
    "**/*/*.spec.ts",
    "**/*/*.ispec.ts",
    "src/testSupport",
    "dist"
  ]
}
